[{"C:\\Users\\hp\\Documents\\GitHub\\hashmalie\\src\\index.js":"1","C:\\Users\\hp\\Documents\\GitHub\\hashmalie\\src\\App.js":"2","C:\\Users\\hp\\Documents\\GitHub\\hashmalie\\src\\store.js":"3","C:\\Users\\hp\\Documents\\GitHub\\hashmalie\\src\\containers\\Signup.js":"4","C:\\Users\\hp\\Documents\\GitHub\\hashmalie\\src\\containers\\Login.js":"5","C:\\Users\\hp\\Documents\\GitHub\\hashmalie\\src\\containers\\Activate.js":"6","C:\\Users\\hp\\Documents\\GitHub\\hashmalie\\src\\containers\\Home.js":"7","C:\\Users\\hp\\Documents\\GitHub\\hashmalie\\src\\containers\\Homepage.js":"8","C:\\Users\\hp\\Documents\\GitHub\\hashmalie\\src\\containers\\Financial.js":"9","C:\\Users\\hp\\Documents\\GitHub\\hashmalie\\src\\containers\\ResetPasswordConfirm.js":"10","C:\\Users\\hp\\Documents\\GitHub\\hashmalie\\src\\containers\\WorkSchedule.js":"11","C:\\Users\\hp\\Documents\\GitHub\\hashmalie\\src\\containers\\ResetPassword.js":"12","C:\\Users\\hp\\Documents\\GitHub\\hashmalie\\src\\hocs\\PrivateRoute.js":"13","C:\\Users\\hp\\Documents\\GitHub\\hashmalie\\src\\containers\\Bid.js":"14","C:\\Users\\hp\\Documents\\GitHub\\hashmalie\\src\\hocs\\Layout.js":"15","C:\\Users\\hp\\Documents\\GitHub\\hashmalie\\src\\containers\\MyBusinessDetailsUpdate.js":"16","C:\\Users\\hp\\Documents\\GitHub\\hashmalie\\src\\containers\\ProjectsManagement.js":"17","C:\\Users\\hp\\Documents\\GitHub\\hashmalie\\src\\containers\\WorkersManagement.js":"18","C:\\Users\\hp\\Documents\\GitHub\\hashmalie\\src\\containers\\MyBusinessDetails.js":"19","C:\\Users\\hp\\Documents\\GitHub\\hashmalie\\src\\actions\\auth.js":"20","C:\\Users\\hp\\Documents\\GitHub\\hashmalie\\src\\components\\Table.js":"21","C:\\Users\\hp\\Documents\\GitHub\\hashmalie\\src\\components\\Navbar.js":"22","C:\\Users\\hp\\Documents\\GitHub\\hashmalie\\src\\reducers\\index.js":"23","C:\\Users\\hp\\Documents\\GitHub\\hashmalie\\src\\actions\\types.js":"24","C:\\Users\\hp\\Documents\\GitHub\\hashmalie\\src\\reducers\\auth.js":"25","C:\\Users\\hp\\Documents\\GitHub\\hashmalie\\src\\components\\reportGenerator.js":"26","C:\\Users\\hp\\Documents\\GitHub\\hashmalie\\src\\components\\david-normal.js":"27","C:\\Users\\hp\\Documents\\GitHub\\hashmalie\\src\\components\\David-normal.js":"28","C:\\Users\\hp\\Documents\\GitHub\\hashmalie\\src\\containers\\FileRepository.js":"29"},{"size":285,"mtime":1618436119974,"results":"30","hashOfConfig":"31"},{"size":2598,"mtime":1618950496255,"results":"32","hashOfConfig":"31"},{"size":412,"mtime":1610809117886,"results":"33","hashOfConfig":"31"},{"size":5902,"mtime":1619047303867,"results":"34","hashOfConfig":"31"},{"size":2638,"mtime":1618436261757,"results":"35","hashOfConfig":"31"},{"size":1266,"mtime":1618436261730,"results":"36","hashOfConfig":"31"},{"size":894,"mtime":1618436084320,"results":"37","hashOfConfig":"31"},{"size":1654,"mtime":1618950618935,"results":"38","hashOfConfig":"31"},{"size":185,"mtime":1610649232171,"results":"39","hashOfConfig":"31"},{"size":2258,"mtime":1618436421273,"results":"40","hashOfConfig":"31"},{"size":13298,"mtime":1618959648353,"results":"41","hashOfConfig":"31"},{"size":1508,"mtime":1618436421324,"results":"42","hashOfConfig":"31"},{"size":498,"mtime":1610659977885,"results":"43","hashOfConfig":"31"},{"size":6241,"mtime":1617535345352,"results":"44","hashOfConfig":"31"},{"size":532,"mtime":1610649232179,"results":"45","hashOfConfig":"31"},{"size":16340,"mtime":1618436421243,"results":"46","hashOfConfig":"31"},{"size":212,"mtime":1610649232175,"results":"47","hashOfConfig":"31"},{"size":9894,"mtime":1618519815655,"results":"48","hashOfConfig":"31"},{"size":5664,"mtime":1618436261794,"results":"49","hashOfConfig":"31"},{"size":5980,"mtime":1618442901302,"results":"50","hashOfConfig":"31"},{"size":5367,"mtime":1618610774351,"results":"51","hashOfConfig":"31"},{"size":2896,"mtime":1618529150489,"results":"52","hashOfConfig":"31"},{"size":121,"mtime":1610649232181,"results":"53","hashOfConfig":"31"},{"size":833,"mtime":1610649232170,"results":"54","hashOfConfig":"31"},{"size":2409,"mtime":1610649232180,"results":"55","hashOfConfig":"31"},{"size":2256,"mtime":1618964087744,"results":"56","hashOfConfig":"31"},{"size":63744,"mtime":1618428918814,"results":"57","hashOfConfig":"31"},{"size":127335,"mtime":1618441104072,"results":"58","hashOfConfig":"31"},{"size":200,"mtime":1618950304636,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"wgoh42",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"62"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"62"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"62"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"62"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"62"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"62"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"62"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"62"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"62"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"62"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"128","messages":"129","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"132","usedDeprecatedRules":"62"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"62"},"C:\\Users\\hp\\Documents\\GitHub\\hashmalie\\src\\index.js",[],["136","137"],"C:\\Users\\hp\\Documents\\GitHub\\hashmalie\\src\\App.js",[],"C:\\Users\\hp\\Documents\\GitHub\\hashmalie\\src\\store.js",["138"],"import { createStore, applyMiddleware, compose } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","C:\\Users\\hp\\Documents\\GitHub\\hashmalie\\src\\containers\\Signup.js",["139"],"import React, { useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signup } from '../actions/auth';\r\n//import Select from 'react-select'\r\n\r\nconst Signup = ({ signup, isAuthenticated }) => {\r\n    const [accountCreated, setAccountCreated] = useState(false);\r\n    const [formData, setFormData] = useState({\r\n        first_name: '',\r\n        last_name: '',\r\n        email: '',\r\n        title: '',\r\n        phone_number: '',\r\n        address: '',\r\n        password: '',\r\n        re_password: ''\r\n    });\r\n    const options = [\r\n  { value: 'M', label: 'מנהל' },\r\n  { value: 'D', label: 'סגן מנהל' },\r\n  { value: 'R', label: 'עובד חשמל' }\r\n]\r\n\r\n\r\n    const { first_name, last_name, email,title, phone_number, address, password, re_password } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if (password === re_password) {\r\n            signup(first_name, last_name, email,title, phone_number, address, password, re_password);\r\n            setAccountCreated(true);\r\n            console.log(\"form Data\", formData)\r\n            localStorage.setItem('user' , JSON.stringify(formData))//check if you added this or from the original\r\n            console.log(localStorage.getItem('user'))\r\n\r\n        }\r\n    };\r\n\r\n    if (isAuthenticated) {\r\n        return <Redirect to='/' />\r\n    }\r\n    if (accountCreated) {\r\n        return <Redirect to='/login' />\r\n    }\r\n\r\n    return (\r\n    <div dir='rtl' class='col-6 container-fluid jumbotron mt-5 right-text' lang=\"he\"  style={{  justifyContent:'right'}}>\r\n                <h1 dir='rtl'>הרשמה</h1>\r\n            <p>תיצור את המשתמש שלך</p>\r\n            <form dir='rtl' onSubmit={e => onSubmit(e)}>\r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='text'\r\n                        placeholder='שם פרטי*'\r\n                        name='first_name'\r\n                        value={first_name}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='text'\r\n                        placeholder='שם משפחה*'\r\n                        name='last_name'\r\n                        value={last_name}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='email'\r\n                        placeholder='איימיל*'\r\n                        name='email'\r\n                        value={email}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n\r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='text'\r\n                        placeholder='סוג עובד*'\r\n                        name='title'\r\n                        value={title}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n\r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='number'\r\n                        placeholder='מספר טילפון*'\r\n                        name='phone_number'\r\n                        value={phone_number}\r\n                        onChange={e => onChange(e)}\r\n                        minLength='8'\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='text'\r\n                        placeholder='כתובת*'\r\n                        name='address'\r\n                        value={address}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='password'\r\n                        placeholder='סיסמה*'\r\n                        name='password'\r\n                        value={password}\r\n                        onChange={e => onChange(e)}\r\n                        minLength='6'\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='password'\r\n                        placeholder='אשר סיסמה*'\r\n                        name='re_password'\r\n                        value={re_password}\r\n                        onChange={e => onChange(e)}\r\n                        minLength='6'\r\n                        required\r\n                    />\r\n                </div>\r\n                <button className='btn btn-primary' type='submit'>הירשם</button>\r\n            </form>\r\n            <p className='mt-3'>\r\n                כבר יש לך חשבון? <Link to='/login'>תתחבר</Link>\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, { signup })(Signup);","C:\\Users\\hp\\Documents\\GitHub\\hashmalie\\src\\containers\\Login.js",["140"],"import React, { useState,  Fragment } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../actions/auth';\r\n\r\nconst Login = ({ login, isAuthenticated }) => {\r\n    const [formData, setFormData] = useState({\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    const { email, password } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        login(email, password);\r\n    };\r\n\r\n\r\n    if (isAuthenticated) {\r\n        return <Redirect to='/homepage' />\r\n    }\r\n\r\n    return (\r\n    <html  lang=\"he\" dir=\"rtl\" >\r\n    <div  class='col-4 container-fluid jumbotron mt-5 right-text' lang=\"he\"  style={{display: 'flex',  justifyContent:'center', alignItems:'center', height: '70vh'}}>\r\n        <div className='container mt-5' dir= \"rtl\" >\r\n            <h1 dir= \"rtl\">כניסה</h1>\r\n            <p dir= \"rtl\">כניסה לחשבון שלך</p>\r\n            <form onSubmit={e => onSubmit(e)}>\r\n                <div className='form-group' dir= \"rtl\">\r\n                    <input\r\n                        className='form-control'\r\n                        type='email'\r\n                        placeholder='איימיל'\r\n                        name='email'\r\n                        value={email}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='password'\r\n                        placeholder='סיסמה'\r\n                        name='password'\r\n                        value={password}\r\n                        onChange={e => onChange(e)}\r\n                        minLength='6'\r\n                        required\r\n                    />\r\n                </div>\r\n                <button className='btn btn-primary' dir= \"rtl\" type='submit'>כניסה</button>\r\n            </form>\r\n            <p className='mt-3' dir= \"rtl\">\r\n                עדין לא עשית חשבון? <Link to='/signup'>תירשם</Link>\r\n            </p>\r\n            <p className='mt-3'>\r\n                שכחת את הסיסמה? <Link to='/reset-password'>לאפס את הסיסמה</Link>\r\n            </p>\r\n        </div>\r\n        </div>\r\n        </html>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);","C:\\Users\\hp\\Documents\\GitHub\\hashmalie\\src\\containers\\Activate.js",[],"C:\\Users\\hp\\Documents\\GitHub\\hashmalie\\src\\containers\\Home.js",["141"],"import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Home = () => (\r\n    <html  lang=\"he\" dir=\"rtl\" >\r\n        <head>\r\n        <meta charset=\"utf-8\"></meta>\r\n        </head>\r\n        <body dir=\"rtl\" >\r\n        <div className='container right-text' lang=\"he\" dir=\"rtl\" style={{display: 'flex',  justifyContent:'center', alignItems:'right', height: '70vh'}}>\r\n            <div class='jumbotron mt-5'>\r\n                <h1 class='display-4' dir= \"rtl\">החשמלאי</h1>\r\n                <p class='lead'>מערכת להנהלת עסק עבודות חשמל</p>\r\n                <hr class='my-4' />\r\n                <p>לחץ על הכפתור להתחברות</p>\r\n                <Link class='btn btn-primary btn-lg' to='/login' role='button'>לכניסה</Link>\r\n            </div>\r\n        </div>\r\n        </body>\r\n    </html>\r\n);\r\n\r\nexport default Home;","C:\\Users\\hp\\Documents\\GitHub\\hashmalie\\src\\containers\\Homepage.js",[],"C:\\Users\\hp\\Documents\\GitHub\\hashmalie\\src\\containers\\Financial.js",["142"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Financial = () => (\r\n    <html lang=\"he\" >\r\n        Financial\r\n    </html>\r\n);\r\nexport default Financial;\r\n","C:\\Users\\hp\\Documents\\GitHub\\hashmalie\\src\\containers\\ResetPasswordConfirm.js",[],"C:\\Users\\hp\\Documents\\GitHub\\hashmalie\\src\\containers\\WorkSchedule.js",["143","144","145","146","147","148","149","150","151"],"import React, { Component,useMemo, useEffect, setState, useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport axios from \"axios\";\r\nimport { connect } from 'react-redux';\r\nimport {get_user_data } from '../actions/auth';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport Table from \"../components/Table\";\r\nimport generatePDF from \"../components/reportGenerator\";\r\n\r\n\r\nconst WorkSchedule  = ({ get_user_data, isAuthenticated}) => {\r\n    const [reports, setReports] = useState({reports:[]});\r\n    const [workers, setWorkers] = useState([]);\r\n    const [fixed, setFixed] = useState(false);\r\n    const [dataRes, setDataRes]= useState([]);\r\n    const [newReport, setNewReport] = useState(\"\");\r\n    const [myBusiness, setMyBusiness] = useState({my_business: null});\r\n    const [showEditReport, setShowEditReport] = useState(false)\r\n    const [rowToEdit, setRowToEdit]=useState(\"\");\r\n    const [editReport, setEditReport] = useState(\"\");\r\n    let data = [];\r\n    let dataf = new Set();\r\n\r\n    const get_reports = async (dataRes) =>{\r\n    const Report_Res = await axios.get('/api/reports/?my_business=' + dataRes)\r\n    //console.log(\"Report_Res.data\", Report_Res.data)\r\n    setReports({reports: Report_Res.data});\r\n    setFixed(false);\r\n    }\r\n\r\n    const get_worker_data = async (dataRes)=>{\r\n       const Worker_Res = await axios.get('/api/workers/?my_business=' + dataRes)\r\n       setWorkers(Worker_Res.data);\r\n    }\r\n    const get_user = async (dataRes)=>{\r\n       const user_Res = await get_user_data()\r\n       setMyBusiness({my_business: user_Res.id})\r\n       setDataRes(user_Res);\r\n    }\r\n\r\n    useEffect(()=>{\r\n      get_user()\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n      get_worker_data(dataRes)\r\n      //console.log(workers);\r\n      get_reports(dataRes)\r\n\r\n    },[dataRes])\r\n\r\n    useEffect(()=>{\r\n      fix_data()\r\n    },[reports, workers])\r\n\r\n\r\n    function fix_data(){\r\n        try{\r\n        if(reports.reports.length !== 0 && workers.length !== 0){\r\n            let workerData;\r\n            //console.log(\"reports\",reports.reports, reports.reports.length)\r\n            reports.reports.forEach(report => (\r\n                    workerData = workers.find((worker)=>worker.id === report.worker_id),\r\n                    report.worker_name=workerData.first_name +\" \"+ workerData.last_name\r\n                ))\r\n            setFixed(true);\r\n        }\r\n        //console.log(\"reports after\",reports.reports, reports.reports.length)\r\n        }\r\n        catch(err){\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    const editReportChange = e => setEditReport({ ...editReport, [e.target.name]: e.target.value });\r\n\r\n    const editReportWorkerIdChange = e =>{\r\n        let first_last_name = e.target.value.split(\" \");\r\n        setEditReport({ ...editReport, first_name: first_last_name[0],\r\n        last_name: first_last_name[1]})\r\n\r\n    }\r\n\r\n    const editReportSubmit = e =>{\r\n        e.preventDefault();\r\n        axios.defaults.xsrfHeaderName = \"X-CSRFTOKEN\";\r\n        axios.defaults.xsrfCookieName = \"csrftoken\";\r\n        axios.defaults.withCredentials = true;\r\n        const formData = new FormData();\r\n        formData.append('my_business', myBusiness.my_business);\r\n        formData.append('id', editReport.id);\r\n        formData.append('worker_id', editReport.worker_id);\r\n        formData.append('project_id', editReport.project_id);\r\n        formData.append('reporting_date', editReport.reporting_date);\r\n        formData.append('start_time', editReport.start_time);\r\n        formData.append('end_time', editReport.end_time);\r\n        formData.append('description', editReport.description);\r\n        setEditReport(\"\");\r\n\r\n        axios({\r\n            method: 'put',\r\n            url: \"/api/reports/\"+editReport.id+\"/\",\r\n            data: formData,\r\n        })\r\n        .then((Res) => {\r\n            setFixed(false);\r\n            setShowEditReport(false);\r\n            const dataCopy = [...reports.reports];\r\n            dataCopy[rowToEdit] = Res.data\r\n            //console.log(\"dataCopy\", dataCopy);\r\n            setReports({reports: dataCopy});\r\n            setRowToEdit(\"\");\r\n            //setReports({reports:[...reports.reports, Res.data]});\r\n        }).catch(err=>{ console.log(\"err\",err, err.response)})\r\n    }\r\n\r\n    const newReportChange = e => setNewReport({ ...newReport, [e.target.name]: e.target.value });\r\n\r\n    const newReportWorkerIdChange = e =>{\r\n        let first_last_name = e.target.value.split(\" \");\r\n        let w = workers.find((worker)=>worker.first_name === first_last_name[0] &&\r\n         worker.last_name === first_last_name[1]);\r\n         if(w !== undefined){\r\n        setNewReport({ ...newReport, worker_id: w.id });\r\n        }\r\n    }\r\n\r\n    const newReportSubmit = e => {\r\n        e.preventDefault();\r\n        axios.defaults.xsrfHeaderName = \"X-CSRFTOKEN\";\r\n        axios.defaults.xsrfCookieName = \"csrftoken\";\r\n        axios.defaults.withCredentials = true;\r\n        const formData = new FormData();\r\n        formData.append('my_business', myBusiness.my_business);\r\n        formData.append('worker_id', newReport.worker_id);\r\n        formData.append('project_id', newReport.project_id);\r\n        formData.append('reporting_date', newReport.reporting_date);\r\n        formData.append('start_time', newReport.start_time);\r\n        formData.append('end_time', newReport.end_time);\r\n        formData.append('description', newReport.description);\r\n        setNewReport(\"\");\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: \"/api/reports/\",\r\n            data: formData,\r\n        })\r\n        .then((Res) => {\r\n            setFixed(false);\r\n            setReports({reports:[...reports.reports, Res.data]});\r\n        }).catch(err=>{ console.log(\"err\", err)})\r\n    }\r\n\r\n    function scheduleForm(){\r\n        return(\r\n         <form className=\"right-text\" dir='rtl' onSubmit={e => newReportSubmit(e)}>\r\n         <div className=\"row\">\r\n         <input\r\n             className='form-control col-2'\r\n             type='text'\r\n             placeholder= \"שם עובד\"\r\n             name='worker_name'\r\n             value={newReport.worker_name}\r\n             onChange={e => newReportWorkerIdChange(e)}\r\n        />\r\n        <input\r\n             className='form-control col-2'\r\n             type='number'\r\n             placeholder=\"מספר פרויקט\"\r\n             name='project_id'\r\n             value={newReport.project_id}\r\n             onChange={e => newReportChange(e)}\r\n             minLength='1'\r\n        />\r\n        <input\r\n             className='form-control col-2'\r\n             type='date'\r\n             placeholder=\"תאריך דיוח\"\r\n             name='reporting_date'\r\n             value={newReport.reporting_date}\r\n             onChange={e => newReportChange(e)}\r\n        />\r\n        <input\r\n             className='form-control col-2'\r\n             type='time'\r\n             placeholder=\"כניסה\"\r\n             name='start_time'\r\n             value={newReport.start_time}\r\n             onChange={e => newReportChange(e)}\r\n        />\r\n        <input\r\n             className='form-control col-2'\r\n             type='time'\r\n             placeholder=\"יציאה\"\r\n             name='end_time'\r\n             value={newReport.end_time}\r\n             onChange={e => newReportChange(e)}\r\n        />\r\n        <input\r\n             className='form-control col-10'\r\n             type='text'\r\n             placeholder=\"תיאור\"\r\n             name='description'\r\n             value={newReport.description}\r\n             onChange={e => newReportChange(e)}\r\n        />\r\n        </div>\r\n        <button className='btn btn-success' type='submit'>הוספת דוח</button>\r\n         </form>\r\n        )\r\n    }\r\n\r\n    const columns = useMemo(\r\n    () => [\r\n           {\r\n            Header: \"שם עובד\",\r\n            accessor: \"worker_name\",\r\n            filterable: true\r\n          },\r\n          {\r\n            Header: \"מספר פרויקט\",\r\n            accessor: \"project_id\",\r\n            disableSortBy: true,\r\n            filterable: true\r\n          },\r\n          {\r\n            Header: \"תאריך דיווח\",\r\n            accessor: \"reporting_date\",\r\n            filterable: true\r\n          },\r\n          {\r\n            Header: \"כניסה\",\r\n            accessor: \"start_time\",\r\n            filterable: true\r\n          },\r\n          {\r\n            Header: \"יציאה\",\r\n            accessor: \"end_time\",\r\n            filterable: true\r\n          },\r\n          {\r\n            Header: \"תיאור\",\r\n            accessor: \"description\",\r\n            disableSortBy: true,\r\n            filterable: true\r\n          },\r\n          {\r\n        Header: \"\",\r\n        id: \"delete\",\r\n        accessor: (str) => \"delete\",\r\n\r\n        Cell: (tableProps) => (\r\n          <span\r\n            style={{\r\n              cursor: \"pointer\",\r\n              color: \"red\",\r\n              textDecoration: \"bold\"\r\n            }}\r\n            onClick={() => {\r\n              // ES6 Syntax use the rvalue if your data is an array.\r\n              const dataCopy = [...reports.reports];\r\n              // It should not matter what you name tableProps. It made the most sense to me.\r\n              dataCopy.splice(tableProps.row.index, 1);\r\n              setReports({reports: dataCopy});\r\n            }}\r\n          >\r\n           X\r\n          </span>\r\n        )\r\n      },\r\n      {\r\n        Header: \"\",\r\n        id: \"edit\",\r\n        accessor: (str) => \"edit\",\r\n\r\n        Cell: (tableProps) => (\r\n          <span\r\n            style={{\r\n              cursor: \"pointer\",\r\n              color: \"blue\",\r\n              textDecoration: \"bold\"\r\n            }}\r\n            onClick={() => {\r\n              // ES6 Syntax use the rvalue if your data is an array.\r\n              //const dataCopy = [...reports.reports];\r\n              // It should not matter what you name tableProps. It made the most sense to me.\r\n              //editReport(tableProps.row);\r\n              //setReports({reports: dataCopy});\r\n              setRowToEdit(tableProps.row.index);\r\n              setEditReport(tableProps.row.original)\r\n              setShowEditReport(true);\r\n            }}\r\n          >\r\n           עריכה\r\n          </span>\r\n        )\r\n      }\r\n    ],\r\n    [reports]\r\n  );\r\n//        <p>Reports: {JSON.stringify(reports)}</p>\r\n//        <p>Workerss: {JSON.stringify(workers)}</p>\r\n//        <p>newReports: {JSON.stringify(newReports)}</p>\r\n\r\n    function editMyReport(){\r\n        console.log(rowToEdit)\r\n        return(\r\n         <form className=\"right-text\" dir='rtl' onSubmit={e => editReportSubmit(e)}>\r\n         <div className=\"row\">\r\n         <input\r\n             className='form-control col-2'\r\n             type='text'\r\n             placeholder= {editReport.worker_name}\r\n             name='worker_name'\r\n             value={editReport.worker_name}\r\n             onChange={e => editReportWorkerIdChange(e)}\r\n        />\r\n        <input\r\n             className='form-control col-2'\r\n             type='number'\r\n             placeholder={editReport.project_id}\r\n             name='project_id'\r\n             value={editReport.project_id}\r\n             onChange={e => editReportChange(e)}\r\n             minLength='1'\r\n        />\r\n        <input\r\n             className='form-control col-2'\r\n             type='date'\r\n             placeholder={editReport.reporting_date}\r\n             name='reporting_date'\r\n             value={editReport.reporting_date}\r\n             onChange={e => editReportChange(e)}\r\n        />\r\n        <input\r\n             className='form-control col-2'\r\n             type='time'\r\n             placeholder={editReport.start_time}\r\n             name='start_time'\r\n             value={editReport.start_time}\r\n             onChange={e => editReportChange(e)}\r\n        />\r\n        <input\r\n             className='form-control col-2'\r\n             type='time'\r\n             placeholder={editReport.end_time}\r\n             name='end_time'\r\n             value={editReport.end_time}\r\n             onChange={e => editReportChange(e)}\r\n        />\r\n        <input\r\n             className='form-control col-10'\r\n             type='text'\r\n             placeholder={editReport.description}\r\n             name='description'\r\n             value={editReport.description}\r\n             onChange={e => editReportChange(e)}\r\n        />\r\n        </div>\r\n        <button className='btn btn-success' type='submit'>עדכן דוח</button>\r\n         </form>\r\n        )\r\n    }\r\n\r\n    function showTable(){\r\n    if (fixed === true){\r\n    return(\r\n          <Table\r\n          columns={columns}\r\n          data={reports.reports}\r\n          dataf={dataf}\r\n          />\r\n          )\r\n    }\r\n    }\r\n    return(\r\n    <html lang=\"he\" className=\"right-text\" >\r\n\r\n         <div dir='rtl' class=' container-fluid jumbotron mt-5' lang=\"he\"  style={{  justifyContent:'center'}}>\r\n          {showTable()}\r\n          {showEditReport ? editMyReport(): \"\"}\r\n          {scheduleForm()}\r\n         </div>\r\n         <button\r\n              className=\"btn btn-primary\"\r\n              onClick={() => generatePDF(dataf)}\r\n         >\r\n            Generate monthly report\r\n         </button>\r\n    </html>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n    });\r\nexport default connect(mapStateToProps, { get_user_data })(WorkSchedule);","C:\\Users\\hp\\Documents\\GitHub\\hashmalie\\src\\containers\\ResetPassword.js",[],"C:\\Users\\hp\\Documents\\GitHub\\hashmalie\\src\\hocs\\PrivateRoute.js",[],"C:\\Users\\hp\\Documents\\GitHub\\hashmalie\\src\\containers\\Bid.js",["152","153","154","155","156","157","158","159","160","161","162","163","164"],"import React, {useState} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {Annotator} from \"image-labeler-react\";\r\n\r\nconst Bid = () => {\r\n    const [newMap, setNewMap] = useState(\"\");\r\n\r\n    /*        const mapSubmit = e => {\r\n            e.preventDefault();\r\n            //console.log(\"bus befir submit: \",map)\r\n\r\n            const formData = new FormData();\r\n            try{\r\n            formData.append(\r\n            \"pic\",\r\n           map.pic,\r\n            );\r\n            } catch(err){\r\n                console.log(\"didn't change image.\")\r\n            }\r\n            formData.append('name',map.name);\r\n\r\n\r\n            axios({\r\n                method: 'put',\r\n                url: \"/api/my-business/\"+business.manager+\"/\",\r\n                data: formData,\r\n                header: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'multipart/form-data',\r\n                },\r\n            })\r\n            .then((dataRes) => {\r\n                setMap(dataRes.data)\r\n                console.log(dataRes.data)\r\n            }).catch(err=>{ console.log(\"err\", err.response)})\r\n         };*/\r\n\r\n    return (\r\n        <html lang=\"HE\" dir=\"rtl\">\r\n        <head>\r\n            <meta charset=\"utf-8\"\r\n                  name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\r\n            </meta>\r\n        </head>\r\n        <body lang=\"he\" dir=\"rtl\">\r\n        <div dir=\"rtl\" className=\" container-fluid \" lang=\"he\" style={{justifyContent: 'right'}}>\r\n            <div className=\" alert alert-primary \" role=\"alert\">\r\n                <div class=\"row \" lang=\"he\" dir=\"rtl\">\r\n                    <form dir=\"rtl\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 col-md-4\">\r\n                                <h3>הוספת מפה:</h3>\r\n                            </div>\r\n                            <div className=\"col-12 col-md-4\">\r\n                                <input className=\"form-group\" type=\"file\"></input>\r\n                            </div>\r\n                            <div className=\"col-12 col-md-4\">\r\n                                <button className=\"btn btn-primary\" type=\"submit\">הוספה</button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n                <div className=\"App\">\r\n                    <Annotator\r\n                        height={700}\r\n                        width={1000}\r\n                        imageUrl={\"https://i.pinimg.com/originals/a6/49/96/a649969f30f6bba48af384878bcc57c2.jpg\"}\r\n                        asyncUpload={async (labeledData) => {\r\n                            let html = \" <tr>     <th scope=\\\"col\\\">\" + 'סוג' + \"</th>\" +\r\n                                \"   <td> \" + \"מחיר ליח'\" + \"</td>\";\r\n                            let price = 0\r\n                            const electricObject = document.getElementById(\"addThing\")\r\n                            document.getElementById(\"BidExplanation\").style.display = \"block\"\r\n\r\n                            if (labeledData.boxes != null) {\r\n\r\n                                electricObject.style.display = \"block\"\r\n\r\n                                // reports.forEach(report => (\r\n                                //     w[report.worker_id]=workers.find((worker)=>worker.id === report.worker_id)\r\n                                // ))\r\n\r\n                                for (let i in labeledData.boxes) {\r\n                                    console.log(\"box annotation\", i)\r\n                                    html += \" <tr>     <th scope=\\\"col\\\">\" + labeledData.boxes[i].annotation + \"</th>\" +\r\n                                        \"   <td> \" + \"100\" + \"</td>\";\r\n                                    price += 100\r\n                                }\r\n                                // electricObject.appendChild(html) ;\r\n                            }\r\n                            html += \" <tr>     <th scope=\\\"col\\\">\" + 'סכום' + \"</th>\" +\r\n                                \"   <td> \" + price + \"</td>\";\r\n                            electricObject.innerHTML = html;\r\n                        }}\r\n                        //disableAnnotation={true}\r\n                        types={[\r\n                            'שקע יחיד רגיל', 'שקע כפול רגיל',\r\n                            'שקע יחיד מוגן מים רגיל', 'שקע כפול מוגן מים רגיל'\r\n                            , 'שקע כח יחיד', 'שקע כח כפול'\r\n                        ]}\r\n                        //array.push to save data\r\n                        showButton={true}\r\n                        /*defaultBoxes={[{\r\n                            x: 316,\r\n                            y: 305,\r\n                            w: 65,\r\n                            h: 61,\r\n                            annotation: ''\r\n                        }]}*/\r\n                        style={{\r\n                            width: 1100,\r\n                            height: 800,\r\n                            margin: \"20px auto\",\r\n                            position: \"relative\",\r\n                            backgroundColor: \"#368\",\r\n                            borderRadius: 8,\r\n                            padding: 10\r\n                        }}\r\n                        // sceneTypes={['1', '2', '3']}\r\n                    />\r\n                </div>\r\n\r\n            <div className=\"row\" >\r\n                <div className=\"col-12 col-md-4\">\r\n                    <h3></h3>\r\n                </div>\r\n                <div className=\"col-12 col-md-4\">\r\n                    <div id=\"BidExplanation\" className=\"row\" dir=\"rtl\" style={{display: \"none\"}}>\r\n                        <table className=\"table table-striped\">\r\n                            <tbody id=\"addThing\" style={{display: \"none\"}}>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-12 col-md-4\">\r\n                    <h3></h3>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n        </body>\r\n        </html>\r\n    );\r\n};\r\n\r\nexport default Bid;\r\n","C:\\Users\\hp\\Documents\\GitHub\\hashmalie\\src\\hocs\\Layout.js",["165"],"import React, { useEffect } from 'react';\r\nimport Navbar from '../components/Navbar';\r\nimport { connect } from 'react-redux';\r\nimport { checkAuthenticated, load_user } from '../actions/auth';\r\n\r\nconst Layout = ({ checkAuthenticated, load_user, children }) => {\r\n    useEffect(() => {\r\n        checkAuthenticated();\r\n        load_user();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            {children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default connect(null, { checkAuthenticated, load_user })(Layout);","C:\\Users\\hp\\Documents\\GitHub\\hashmalie\\src\\containers\\MyBusinessDetailsUpdate.js",["166","167","168","169","170","171","172","173","174","175"],"import React, { Component, useEffect, setState, useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport axios from \"axios\";\r\nimport { connect } from 'react-redux';\r\nimport {get_user_data, logout } from '../actions/auth';\r\nimport { Link, useHistory, Redirect } from 'react-router-dom';\r\n\r\nimport MyBusinessDetails from '../containers/MyBusinessDetails';\r\n\r\n\r\nconst MyBusinessDetailsUpdate = ({ get_user_data,logout, isAuthenticated}) => {\r\n    const [manager, setManager] = useState(\"\");\r\n    const [director, setDirector] = useState(\"\");\r\n    const [cars, setCars] = useState([]);\r\n    const [business, setBusiness] = useState(\"\");\r\n    const [newUser, setNewUser] = useState(\"\");\r\n    const [newCar, setNewCar] = useState(\"\");\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n        await get_user_data().then((dataRes) => {\r\n            axios\r\n          .get(\"/api/users/\"+ dataRes.id +\"/\")\r\n          .then((dataRes) => {\r\n            setManager(dataRes.data);\r\n\r\n           })\r\n\r\n            axios\r\n          .get(\"/api/cars/?my_business=\"+dataRes.id)\r\n          .then((dataRes) => {\r\n            setCars(dataRes.data);})\r\n\r\n           axios\r\n          .get(\"/api/my-business/\"+ dataRes.id +\"/\")\r\n          .then((dataRes) => {\r\n            setBusiness(dataRes.data);\r\n             return dataRes.data.deputy_director\r\n\r\n           }).then((dataRes) => {\r\n            axios\r\n          .get(\"/api/users/\"+ dataRes +\"/\")\r\n          .then((dataRes) => {\r\n            setDirector(dataRes.data);\r\n            })\r\n           })\r\n        })\r\n        })();\r\n\r\n    }, []);\r\n\r\n    let fileSelectedHandler = event =>{setBusiness({...business,logo: event.target.files[0] })}\r\n    let carImageHandler  = event =>{setNewCar({...newCar,image: event.target.files[0] })}\r\n    let directorImageHandler  = event =>{setDirector({...director, photo: event.target.files[0] })}\r\n    let managerImageHandler  = event =>{setManager({...manager, photo: event.target.files[0] })}\r\n\r\n    //console.log(business)\r\n    const managerChange = e => setManager({ ...manager, [e.target.name]: e.target.value });\r\n    const directorChange = e => setDirector({ ...director, [e.target.name]: e.target.value });\r\n    const businessChange = e => setBusiness({ ...business, [e.target.name]: e.target.value });\r\n    const newCarChange = e => setNewCar({ ...newCar, [e.target.name]: e.target.value });\r\n\r\n    const mangerSubmit = e => {\r\n        e.preventDefault();\r\n        axios.defaults.xsrfHeaderName = \"X-CSRFTOKEN\";\r\n        axios.defaults.xsrfCookieName = \"csrftoken\";\r\n        axios.defaults.withCredentials = true;\r\n        const formData = new FormData();\r\n        try{\r\n        formData.append(\r\n        'photo',\r\n        manager.photo,\r\n        manager.photo.name\r\n        );\r\n        } catch(err){\r\n            console.log(\"didn't change image.\")\r\n        }\r\n        formData.append('first_name', manager.first_name);\r\n        formData.append('last_name', manager.last_name);\r\n        formData.append('phone_number', manager.phone_number);\r\n        formData.append('email', manager.email);\r\n        formData.append('address', manager.address);\r\n        formData.append('password', manager.password);\r\n        formData.append('title', manager.title);\r\n        formData.append('age', manager.age);\r\n\r\n        axios\r\n        .put(\"/api/users/\"+manager.id+\"/\",\r\n        formData\r\n        )\r\n        .then((dataRes) => {\r\n            setManager(dataRes.data)\r\n        }).catch(err=>{ console.log(\"err\", err.response)})\r\n        //if changed title or email?\r\n    };\r\n\r\n\r\n    const directorSubmit = e => {\r\n        e.preventDefault();\r\n        axios.defaults.xsrfHeaderName = \"X-CSRFTOKEN\";\r\n        axios.defaults.xsrfCookieName = \"csrftoken\";\r\n        axios.defaults.withCredentials = true;\r\n        const formData = new FormData();\r\n        try{\r\n        formData.append(\r\n        'photo',\r\n        director.photo,\r\n        director.photo.name\r\n        );\r\n        } catch(err){\r\n            console.log(\"didn't change image.\")\r\n        }\r\n        formData.append('first_name', director.first_name);\r\n        formData.append('last_name', director.last_name);\r\n        formData.append('phone_number', director.phone_number);\r\n        formData.append('email', director.email);\r\n        formData.append('address', director.address);\r\n        formData.append('password', director.password);\r\n        formData.append('title', director.title);\r\n        formData.append('age', director.age);\r\n        axios\r\n        .put(\"/api/users/\"+director.id+\"/\",\r\n        formData)\r\n        .then((dataRes) => {\r\n            setDirector(dataRes.data)\r\n        }).catch(err=>{ console.log(\"err\")})\r\n        //if changed title or email?\r\n    };\r\n     const businessSubmit = e => {\r\n        e.preventDefault();\r\n        //console.log(\"bus befir submit: \", business)\r\n\r\n        const formData = new FormData();\r\n        try{\r\n        formData.append(\r\n        \"logo\",\r\n        business.logo,\r\n        business.logo.name\r\n        );\r\n        } catch(err){\r\n            console.log(\"didn't change image.\")\r\n        }\r\n        formData.append('manager', business.manager);\r\n        formData.append('deputy_director', business.deputy_director);\r\n        formData.append('name', business.name);\r\n\r\n\r\n        axios({\r\n            method: 'put',\r\n            url: \"/api/my-business/\"+business.manager+\"/\",\r\n            data: formData,\r\n            header: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'multipart/form-data',\r\n            },\r\n        })\r\n        .then((dataRes) => {\r\n            setBusiness(dataRes.data)\r\n            console.log(dataRes.data)\r\n        }).catch(err=>{ console.log(\"err\", err.response)})\r\n     };\r\n\r\n     const newCarSubmit = e => {\r\n        e.preventDefault();\r\n        axios.defaults.xsrfHeaderName = \"X-CSRFTOKEN\";\r\n        axios.defaults.xsrfCookieName = \"csrftoken\";\r\n        axios.defaults.withCredentials = true;\r\n        const formData = new FormData();\r\n        //console.log(\"business.logo\", business.logo)\r\n        try{\r\n        formData.append(\r\n        \"image\",\r\n        newCar.image,\r\n        newCar.image.name\r\n        );\r\n        } catch(err){\r\n            console.log(\"didn't change image.\")\r\n        }\r\n\r\n        formData.append('my_business', business.manager);\r\n        formData.append('license_number', newCar.license_number)\r\n        formData.append('license_validity', newCar.license_validity)\r\n        formData.append('insurance_validity', newCar.insurance_validity)\r\n        formData.append('insurance_up_to_age', newCar.insurance_up_to_age)\r\n\r\n        console.log(\"new car\", newCar)\r\n        setNewCar({license_number: \"\",\r\n        license_validity: \"\",\r\n        insurance_validity: \"\",\r\n        insurance_up_to_age: \"\",\r\n        image: \"\",\r\n        })\r\n        axios({\r\n            method: 'post',\r\n            url: \"/api/cars/\",\r\n            data: formData,\r\n        })\r\n        .then((dataRes) => {\r\n            setCars(dataRes.data)\r\n            console.log(\"cars data\", dataRes.data)\r\n        }).catch(err=>{ console.log(\"err\", err.response)})\r\n\r\n     }\r\n\r\n    return (\r\n\r\n\r\n    <div dir='rtl' class=' container-fluid jumbotron mt-5 right-text' lang=\"he\"  style={{  justifyContent:'right'}}>\r\n            <h1 dir='rtl'>עדכון הפרטים העסק שלי</h1>\r\n\r\n            <form dir='rtl' onSubmit={e => businessSubmit(e)}>\r\n                <p>תעדכן את פרטי העסק</p>\r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='text'\r\n                        placeholder={business.name}\r\n                        name='name'\r\n                        value={business.name}\r\n                        onChange={e => businessChange(e)}\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                <input className='form-group'\r\n                type = 'file'\r\n                onChange={e => fileSelectedHandler(e)}\r\n                />\r\n                </div>\r\n\r\n                <button className='btn btn-primary' type='submit'>עדכן פרטים העסק</button>\r\n            </form>\r\n\r\n            <div class = \"container-fluid row\">\r\n\r\n            <form  onSubmit={e => mangerSubmit(e)}>\r\n                <p>תעדכן את המשתמש שלך</p>\r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='text'\r\n                        placeholder={manager.first_name}\r\n                        name='first_name'\r\n                        value={manager.first_name}\r\n                        onChange={e => managerChange(e)}\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='text'\r\n                        placeholder={manager.last_name}\r\n                        name='last_name'\r\n                        value={manager.last_name}\r\n                        onChange={e => managerChange(e)}\r\n                    />\r\n                </div>\r\n\r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='number'\r\n                        placeholder={manager.phone_number}\r\n                        name='phone_number'\r\n                        value={manager.phone_number}\r\n                        onChange={e => managerChange(e)}\r\n                        minLength='8'\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='number'\r\n                        placeholder={manager.age}\r\n                        name='age'\r\n                        value={manager.age}\r\n                        onChange={e => managerChange(e)}\r\n                        minLength='1'\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='text'\r\n                        placeholder={manager.address}\r\n                        name='address'\r\n                        value={manager.address}\r\n                        onChange={e => managerChange(e)}\r\n                    />\r\n                </div>\r\n                תמונה אשית\r\n                <div className='form-group'>\r\n                <input className='form-group'\r\n                type = 'file'\r\n                onChange={e => managerImageHandler(e)}\r\n                />\r\n                </div>\r\n\r\n                <button className='btn btn-primary' type='submit'>עדכן פרטים שלי</button>\r\n            </form>\r\n\r\n\r\n            <form  onSubmit={e => directorSubmit(e)}>\r\n            <p>תעדכן את פרטי סגן המנהל</p>\r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='text'\r\n                        placeholder={director.first_name}\r\n                        name='first_name'\r\n                        value={director.first_name}\r\n                        onChange={e => directorChange(e)}\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='text'\r\n                        placeholder={director.last_name}\r\n                        name='last_name'\r\n                        value={director.last_name}\r\n                        onChange={e => directorChange(e)}\r\n                    />\r\n                </div>\r\n\r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='number'\r\n                        placeholder={director.phone_number}\r\n                        name='phone_number'\r\n                        value={director.phone_number}\r\n                        onChange={e => directorChange(e)}\r\n                        minLength='8'\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='number'\r\n                        placeholder={director.age}\r\n                        name='age'\r\n                        value={director.age}\r\n                        onChange={e => directorChange(e)}\r\n                        minLength='1'\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='text'\r\n                        placeholder={director.address}\r\n                        name='address'\r\n                        value={director.address}\r\n                        onChange={e => directorChange(e)}\r\n                    />\r\n                </div>\r\n                תמונת סגן מנהל\r\n                <div className='form-group'>\r\n                <input className='form-group'\r\n                type = 'file'\r\n                onChange={e => directorImageHandler(e)}\r\n                />\r\n                </div>\r\n\r\n                <button className='btn btn-primary' type='submit'>עדכן פרטי הסגן מנהל</button>\r\n            </form>\r\n\r\n            <form dir='rtl' onSubmit={e => newCarSubmit(e)}>\r\n            <p>תוסיף רכב חדש</p>\r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='number'\r\n                        placeholder=\"מספר רישוי\"\r\n                        name='license_number'\r\n                        value={newCar.license_number}\r\n                        onChange={e => newCarChange(e)}\r\n                        minLength='7'\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    תוקף רישוי\r\n                    <input\r\n                        className='form-control'\r\n                        type='date'\r\n                        placeholder=\"תוקף רישוי\"\r\n                        name='license_validity'\r\n                        value={newCar.license_validity}\r\n                        onChange={e => newCarChange(e)}\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    תוקף ביטוח\r\n                    <input\r\n                        className='form-control'\r\n                        type='date'\r\n                        placeholder=\"תוקף ביטוח\"\r\n                        name='insurance_validity'\r\n                        value={newCar.insurance_validity}\r\n                        onChange={e => newCarChange(e)}\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='number'\r\n                        placeholder=\"ביטוח עד גיל\"\r\n                        name='insurance_up_to_age'\r\n                        value={newCar.insurance_up_to_age}\r\n                        onChange={e => newCarChange(e)}\r\n                        minLength='2'\r\n                    />\r\n                </div>\r\n                תמונת רכב\r\n                <div className='form-group'>\r\n\r\n                <input className='form-group'\r\n                type = 'file'\r\n                onChange={e => carImageHandler(e)}\r\n                />\r\n                </div>\r\n                <button className='btn btn-primary' type='submit'>תוסיף רכב חדש</button>\r\n            </form>\r\n            </div>\r\n            <p> <Link className='nav-link' to='/my-business-details'>סיימתי עדכון</Link></p>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, { get_user_data, logout })(MyBusinessDetailsUpdate);\r\n","C:\\Users\\hp\\Documents\\GitHub\\hashmalie\\src\\containers\\ProjectsManagement.js",["176"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ProjectsManagement = () => (\r\n    <html lang=\"he\" >\r\n        ProjectsManagement\r\n    </html>\r\n);\r\nexport default ProjectsManagement;\r\n","C:\\Users\\hp\\Documents\\GitHub\\hashmalie\\src\\containers\\WorkersManagement.js",["177","178","179","180","181","182"],"import React, { Component, useEffect, setState, useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport axios from \"axios\";\r\nimport { connect } from 'react-redux';\r\nimport {get_user_data } from '../actions/auth';\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\nconst WORKER_TYPE =\r\n        {'R': 'Regular Worker',\r\n        'C': 'Contractor',\r\n        'A': 'Architect'};\r\n\r\nconst TOGGLE_MSG ={true: \"תציג כל הפרטים\", false: \"צמצם פרטים\"}\r\n\r\nconst WorkersManagement  = ({ get_user_data, isAuthenticated}) => {\r\n    const [workers, setWorkers] = useState([]);\r\n    const [state, setState] = useState({showMessage: false, msg: \"תציג כל הפרטים\"});\r\n    const [addWorker, setAddWorker] = useState({showForm: false, showButton: true})\r\n    const [newWorker, setNewWorker] = useState(\"\");\r\n    const [myBusiness, setMyBusiness] = useState({my_business: null});\r\n\r\n    useEffect(() => {\r\n    (async () => {\r\n        await get_user_data().then((dataRes) => {\r\n            setMyBusiness({my_business: dataRes.id})\r\n             axios\r\n          .get(\"/api/workers/?my_business=\" +dataRes.id )\r\n          .then((dataRes) => {\r\n            setWorkers(dataRes.data);\r\n            })\r\n\r\n        })})();\r\n    }, []);\r\n\r\n   function getImgUrl(image, instance) {\r\n    if (image === null) {\r\n        return '/default_'+instance+'_pic.png';\r\n    }\r\n     return image;\r\n    }\r\n\r\n\r\n    const newWorkerChange = e => setNewWorker({ ...newWorker, [e.target.name]: e.target.value });\r\n\r\n    let fileSelectedHandler  = e =>{setNewWorker({...newWorker, [e.target.name]: e.target.files[0] })}\r\n\r\n\r\n    const newWorkerSubmit = e => {\r\n        e.preventDefault();\r\n        axios.defaults.xsrfHeaderName = \"X-CSRFTOKEN\";\r\n        axios.defaults.xsrfCookieName = \"csrftoken\";\r\n        axios.defaults.withCredentials = true;\r\n        const formData = new FormData();\r\n        try{formData.append(\"photo\", newWorker.photo,newWorker.photo.name);\r\n        } catch(err){console.log(\"didn't change photo.\")}\r\n\r\n        try{formData.append(\"id_photo\", newWorker.id_photo,newWorker.id_photo.name);\r\n        } catch(err){console.log(\"didn't change id_photo.\")}\r\n\r\n        try{formData.append(\"license\", newWorker.license,newWorker.license.name);\r\n        } catch(err){console.log(\"didn't change license.\")}\r\n\r\n        try{formData.append(\"permit\", newWorker.permit,newWorker.permit.name);\r\n        } catch(err){console.log(\"didn't change permit.\")}\r\n\r\n        formData.append('my_business', myBusiness.my_business);\r\n        formData.append('email', newWorker.email);\r\n        formData.append('app_password', newWorker.app_password);\r\n        formData.append('first_name', newWorker.first_name);\r\n        formData.append('last_name', newWorker.last_name);\r\n        formData.append('phone_number', newWorker.phone_number);\r\n        formData.append('address', newWorker.address);\r\n        formData.append('age', newWorker.age);\r\n        formData.append('title', newWorker.title);\r\n        formData.append('rate_per_day', newWorker.rate_per_day);\r\n        formData.append('permit_type', newWorker.permit_type);\r\n        formData.append('permit_validity', newWorker.permit_validity);\r\n        console.log(\"new worker:\", newWorker);\r\n        setNewWorker(\"\");\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: \"/api/workers/\",\r\n            data: formData,\r\n        })\r\n        .then((dataRes) => {\r\n            setWorkers(dataRes.data)\r\n            console.log(\"workers data\", dataRes.data)\r\n        }).catch(err=>{ console.log(\"err\", err.response)})\r\n\r\n        setAddWorker({showForm: false, showButton: true});\r\n    }\r\n\r\n    let onLinkClickHandler = () => {\r\n        let showOrHide = state.showMessage;\r\n        setState({showMessage: !showOrHide, msg: TOGGLE_MSG[showOrHide]});\r\n    };\r\n\r\n    let addWorkerClickHandler = () => {\r\n        setAddWorker({showForm: true, showButton:  false});\r\n    };\r\n\r\n    let dontAddWorkerClickHandler = () => {\r\n        setAddWorker({showForm: false, showButton: true});\r\n        setNewWorker(\"\");\r\n    };\r\n\r\n    function workerForm(){\r\n    return(\r\n    <form className=\"right-text\" dir='rtl' onSubmit={e => newWorkerSubmit(e)}>\r\n        <input\r\n             className='form-control'\r\n             type='text'\r\n             placeholder= \"שם פרטי\"\r\n             name='first_name'\r\n             value={newWorker.first_name}\r\n             onChange={e => newWorkerChange(e)}\r\n        />\r\n        <input\r\n             className='form-control'\r\n             type='text'\r\n             placeholder= \"שם משפחה\"\r\n             name='last_name'\r\n             value={newWorker.last_name}\r\n             onChange={e => newWorkerChange(e)}\r\n        />\r\n        <input\r\n             className='form-control'\r\n             type='email'\r\n             placeholder= \"אימייל\"\r\n             name='email'\r\n             value={newWorker.email}\r\n             onChange={e => newWorkerChange(e)}\r\n        />\r\n        <input\r\n             className='form-control'\r\n             type='text'\r\n             placeholder= \"סיסמת אפליקציה\"\r\n             name='app_password'\r\n             value={newWorker.app_password}\r\n             onChange={e => newWorkerChange(e)}\r\n        />\r\n        <input className='form-group'\r\n                type = 'file'\r\n                name='photo'\r\n                onChange={e => fileSelectedHandler(e)}\r\n        />\r\n        <input\r\n             className='form-control'\r\n             type='number'\r\n             placeholder=\"מספר טילפון\"\r\n             name='phone_number'\r\n             value={newWorker.phone_number}\r\n             onChange={e => newWorkerChange(e)}\r\n             minLength='8'\r\n        />\r\n        <input\r\n             className='form-control'\r\n             type='text'\r\n             placeholder= \"מקום מיגורים\"\r\n             name='address'\r\n             value={newWorker.address}\r\n             onChange={e => newWorkerChange(e)}\r\n        />\r\n        <input\r\n             className='form-control'\r\n             type='number'\r\n             placeholder=\"גיל\"\r\n             name='age'\r\n             value={newWorker.age}\r\n             onChange={e => newWorkerChange(e)}\r\n             minLength='2'\r\n        />\r\n        <input\r\n             className='form-control'\r\n             type='text'\r\n             placeholder= \"סוג עובד\"\r\n             name='title'\r\n             value={newWorker.title}\r\n             onChange={e => newWorkerChange(e)}\r\n        />\r\n        <input className='form-group'\r\n                type = 'file'\r\n                name='id_photo'\r\n                onChange={e => fileSelectedHandler(e)}\r\n        />\r\n        <input\r\n             className='form-control'\r\n             type='float'\r\n             placeholder=\"תעריף ליום\"\r\n             name='rate_per_day'\r\n             value={newWorker.rate_per_day}\r\n             onChange={e => newWorkerChange(e)}\r\n        />\r\n        <input className='form-group'\r\n                type = 'file'\r\n                name='license'\r\n                onChange={e => fileSelectedHandler(e)}\r\n        />\r\n        <input className='form-group'\r\n                type = 'file'\r\n                name='permit'\r\n                onChange={e => fileSelectedHandler(e)}\r\n        />\r\n        <input\r\n             className='form-control'\r\n             type='text'\r\n             placeholder= \"סוג רישוי\"\r\n             name='permit_type'\r\n             value={newWorker.permit_type}\r\n             onChange={e => newWorkerChange(e)}\r\n        />\r\n        <input\r\n             className='form-control'\r\n             type='date'\r\n             placeholder=\"תוקף רישוי\"\r\n             name='permit_validity'\r\n             value={newWorker.permit_validity}\r\n             onChange={e => newWorkerChange(e)}\r\n        />\r\n        <button className='btn btn-success' type='submit'>הוספה</button>\r\n        <button className='btn btn-danger' onClick={dontAddWorkerClickHandler}>בטל הוספת עובד</button>\r\n\r\n\r\n    </form>\r\n    )\r\n    }\r\n\r\n    function loadWorker(worker){\r\n        try{\r\n        return(\r\n        <div>\r\n        <p>{worker.email}</p>\r\n        <p>{worker.app_password}</p>\r\n        <p>{worker.phone_number}</p>\r\n        <p>{worker.address}</p>\r\n        <p>{worker.rate_per_day}</p>\r\n        <p>{worker.id_photo}</p>\r\n        <p>{worker.license}</p>\r\n        <p>{worker.permit}</p>\r\n\r\n        </div>\r\n        )}\r\n        catch(err){\r\n           console.log(err)\r\n        }\r\n    }\r\n\r\n   //<p>Workers: {JSON.stringify(workers)}</p>\r\n    return(\r\n    <div>\r\n     <html lang=\"he\" >\r\n        <head>\r\n        <meta charset=\"utf-8\"></meta>\r\n        </head>\r\n        <body dir=\"rtl\">\r\n\r\n\r\n\r\n        <div class = \"container-fluid row\">\r\n             {\r\n        workers.map(worker => (\r\n            <div >\r\n            <div class='col-12'>\r\n                <img src={getImgUrl(worker.photo, \"worker\")} height={150} width={150}></img>\r\n           </div>\r\n           <div class='col-12'>\r\n                 <p class='lead'>{worker.first_name} {worker.last_name} - {WORKER_TYPE[worker.title]}</p>\r\n                 <p>{state.showMessage && loadWorker(worker)}</p>\r\n\r\n                  <Link onClick={onLinkClickHandler} >{state.msg}</Link>\r\n           </div>\r\n\r\n\r\n           </div>\r\n          ))}\r\n        </div>\r\n\r\n            <div dir='rtl' class=' container-fluid jumbotron mt-5' lang=\"he\"  style={{  justifyContent:'right'}}>\r\n                 {addWorker.showButton && <button  className='btn btn-primary' onClick={addWorkerClickHandler}  >תוסיף עובד חדש</button>}\r\n                 {addWorker.showForm && workerForm()}\r\n\r\n            </div>\r\n        </body>\r\n    </html>\r\n    </div>\r\n    );\r\n\r\n};\r\n\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n    });\r\nexport default connect(mapStateToProps, { get_user_data })(WorkersManagement);\r\n","C:\\Users\\hp\\Documents\\GitHub\\hashmalie\\src\\containers\\MyBusinessDetails.js",["183","184","185","186","187","188","189","190","191","192","193"],"import React, { Component, useEffect, setState, useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport axios from \"axios\";\r\nimport { connect } from 'react-redux';\r\nimport {get_user_data } from '../actions/auth';\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\nconst MyBusinessDetails = ({ get_user_data, isAuthenticated}) => {\r\n    const [manager, setManager] = useState(\"\");\r\n    const [director, setDirector] = useState(\"\");\r\n    const [cars, setCars] = useState([]);\r\n    const [business, setBusiness] = useState(\"\");\r\n    const [newUser, setNewUser] = useState(\"\");\r\n\r\n     useEffect(() => {\r\n        (async () => {\r\n        await get_user_data().then((dataRes) => {\r\n            let userData = dataRes;\r\n            axios\r\n          .get(\"/api/users/\"+ dataRes.id +\"/\")\r\n          .then((dataRes) => {\r\n            setManager(dataRes.data);\r\n            axios\r\n          .get(\"/api/cars/?my_business=\"+userData.id)\r\n          .then((dataRes) => {\r\n            setCars(dataRes.data);})\r\n\r\n            axios\r\n          .get(\"/api/my-business/\"+ userData.id +\"/\")\r\n          .then((dataRes) => {\r\n            setBusiness(dataRes.data);\r\n             return dataRes.data.deputy_director\r\n\r\n           }).then((dataRes) => {\r\n            axios\r\n          .get(\"/api/users/\"+ dataRes +\"/\")\r\n          .then((dataRes) => {\r\n            setDirector(dataRes.data);\r\n\r\n            })\r\n           })\r\n            })\r\n\r\n        })\r\n        })();\r\n\r\n    }, []);\r\n\r\n    function getImgUrl(image, instance) {\r\n    if (image === null) {\r\n        return '/default_'+instance+'_pic.png';\r\n    }\r\n     return image;\r\n    }\r\n\r\n    function loadCars(){\r\n        try{\r\n        return(\r\n        cars.map(car => (\r\n            <div class = \"row \">\r\n           <div class='col-6'>\r\n                <h2 >רכב מספר {car.id}</h2>\r\n                    <p class='lead'>מספר רישוי: {car.license_number}</p>\r\n                <p class='lead'>תוקף רישוי: {car.license_validity} </p>\r\n                <p class='lead'>תוקף ביטוח: {car.insurance_validity}</p>\r\n                <p class='lead'>ביטוח עד גיל: {car.insurance_up_to_age}</p>\r\n           </div>\r\n           <div class='col-6'>\r\n                <img src={getImgUrl(car.image, \"car\")} height={150} width={150}></img>\r\n           </div>\r\n\r\n           </div>\r\n          )))\r\n        } catch(err){\r\n        }\r\n    }\r\n\r\n//    <p>API: {JSON.stringify(manager)}</p>\r\n//    <p>Director: {JSON.stringify(director)}</p>\r\n//    <p>Cars: {JSON.stringify(cars)}</p>\r\n//    <p>NewUser: {JSON.stringify(newUser)}</p>\r\n//    <p>business: {JSON.stringify(business)}</p>\r\n\r\n        return(\r\n    <div>\r\n    <html lang=\"he\" >\r\n        <head>\r\n        <meta charset=\"utf-8\"></meta>\r\n        </head>\r\n        <body dir=\"rtl\" className=\"right-text\">\r\n\r\n\r\n\r\n        <div class = \"container-fluid right-text\">\r\n        <div className='container' >\r\n           <div class = \"row \">\r\n           <div class='jumbotron mt-5 col-6'>\r\n                <h1 class='display-4'>{business.name}</h1>\r\n           </div>\r\n           <div class='jumbotron mt-5 col-6'>\r\n                <img src={getImgUrl(business.logo, \"business\")} height={250} width={250} ></img>\r\n           </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n\r\n        <div class = \"container-fluid right-text\">\r\n        <div class = \"row \">\r\n        <div className='container' class=\"col-6\" >\r\n           <div class = \"row \">\r\n           <div class='jumbotron mt-5 col-5'>\r\n                <h1 class='display-4'>מנהל העסק</h1>\r\n                <p class='lead'>שם פרטי: {manager.first_name }</p>\r\n                <p class='lead'>שם משפחה: {manager.last_name}</p>\r\n                <p class='lead'>מספר טילפון: {manager.phone_number}</p>\r\n                <p class='lead'>איימיל: {manager.email}</p>\r\n                <p class='lead'>כתובת מגורים: {manager.address}</p>\r\n                <p class='lead'>גיל: {manager.age}</p>\r\n           </div>\r\n           <div class='jumbotron mt-5 col-5'>\r\n                <img src={getImgUrl(manager.photo, \"user\")} height={150} width={150} ></img>\r\n           </div>\r\n           </div>\r\n        </div>\r\n        <div className='container' class=\"col-6\" >\r\n           <div class = \"row \">\r\n           <div class='jumbotron mt-5 col-5'>\r\n                <h1 class='display-4'>סגן מנהל</h1>\r\n                <p class='lead'>שם פרטי: {director.first_name}</p>\r\n                <p class='lead'>שם משפחה: {director.last_name} </p>\r\n                <p class='lead'>מספר טילפון: {director.phone_number}</p>\r\n                <p class='lead'>איימיל: {director.email}</p>\r\n                <p class='lead'>כתובת מגורים: {director.address}</p>\r\n                <p class='lead'>גיל: {director.age}</p>\r\n           </div>\r\n           <div class='jumbotron mt-5'>\r\n                <img src={getImgUrl(director.photo, \"user\")} height={150} width={150} ></img>\r\n           </div>\r\n           </div>\r\n        </div>\r\n\r\n        <div class = \"container-fluid\" dir=\"rtl\">\r\n           <div class='jumbotron mt-5'>\r\n                <h1 class='display-4'>רכבים בעסק</h1>\r\n\r\n             {loadCars()}\r\n        </div>\r\n        </div>\r\n        </div>\r\n        </div>\r\n        <p class='lead'> <Link to='/my-business-details-update'>עדכן את פרטי העסק שלי</Link></p>\r\n        </body>\r\n    </html>\r\n      </div>\r\n      );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n    });\r\nexport default connect(mapStateToProps, { get_user_data })(MyBusinessDetails);\r\n","C:\\Users\\hp\\Documents\\GitHub\\hashmalie\\src\\actions\\auth.js",[],"C:\\Users\\hp\\Documents\\GitHub\\hashmalie\\src\\components\\Table.js",["194","195","196","197","198"],"import React,{useState} from \"react\";\r\nimport { useTable, useFilters, useSortBy } from \"react-table\";\r\nimport 'react-date-range/dist/styles.css'; // main style file\r\nimport 'react-date-range/dist/theme/default.css'; // theme css file\r\nimport { Calendar, DateRangePicker } from 'react-date-range';\r\nexport default function Table({ columns, data, dataf }) {\r\n// Table component logic and UI come here\r\n    // Use the useTable Hook to send the columns and data to build the table\r\n\r\n  const {\r\n    getTableProps, // table props from react-table\r\n    getTableBodyProps, // table body props from react-table\r\n    headerGroups, // headerGroups, if your table has groupings\r\n    rows,// rows for the table based on the data passed\r\n    prepareRow, // Prepare the row (this function needs to be called for each row before getting the row props)\r\n    setFilter // The useFilter Hook provides a way to set the filter\r\n  } = useTable({\r\n    columns,\r\n    data\r\n  },\r\n   useFilters, // Adding the useFilters Hook to the table\r\n   useSortBy // This plugin Hook will help to sort our table columns\r\n   );\r\n    // Create a state\r\n    const [filterInput, setFilterInput] = useState(\"\");\r\n    // Update the state when input changes\r\n    const handleProjectFilterChange = e => {\r\n      const value = e.target.value || undefined;\r\n      setFilter(\"project_id\", value); // Update the report.project_id filter. Now our table will filter and show only the rows which have a matching value\r\n      setFilterInput({ ...filterInput, project_id: value });\r\n    };\r\n\r\n     const handleNameFilterChange = e => {\r\n      const value = e.target.value || undefined;\r\n      setFilter(\"worker_name\", value); // Update the report.project_id filter. Now our table will filter and show only the rows which have a matching value\r\n      setFilterInput({ ...filterInput, worker_name: value});\r\n    };\r\n\r\n    const handleFirstDateFilterChange = e => {\r\n      const value = e.target.value || undefined;\r\n      //setFilter(\"reporting_date\", value);\r\n      setFilterInput({ ...filterInput, first_reporting_date: value });\r\n\r\n    };\r\n     const handleLastDateFilterChange = e => {\r\n      const value = e.target.value || undefined;\r\n      //setFilter(\"reporting_date\", value);\r\n      setFilterInput({ ...filterInput, last_reporting_date: value });\r\n\r\n    };\r\n\r\n    const handleSelect = e => {\r\n    console.log(e); // native Date object\r\n    };\r\n\r\n    function in_date_range(date){\r\n        let my_date = new Date(date);\r\n        let first = new Date(filterInput.first_reporting_date);\r\n        let last = new Date(filterInput.last_reporting_date);\r\n        if(filterInput.first_reporting_date === undefined && filterInput.last_reporting_date === undefined){\r\n            return true;\r\n        }\r\n        if(filterInput.first_reporting_date !== undefined && filterInput.last_reporting_date !== undefined){\r\n            return my_date >= first && my_date <= last;\r\n        }\r\n        if(filterInput.first_reporting_date !== undefined){\r\n            return my_date >= first\r\n        }\r\n        if(filterInput.last_reporting_date !== undefined){\r\n            return my_date <= last\r\n        }\r\n    }\r\n\r\n  return (\r\n    <div dir='rtl' class=' container-fluid jumbotron mt-5' lang=\"he\"  style={{  justifyContent:'right'}}>\r\n    <h1>דיווחים של העובדים</h1>\r\n    <p>מסננים:</p>\r\n    <input\r\n      value={filterInput.worker_name}\r\n      onChange={handleNameFilterChange}\r\n      placeholder={\"סנן לפי שם עובד\"}\r\n    />\r\n    <input\r\n        type='number'\r\n      value={filterInput.project_id}\r\n      onChange={handleProjectFilterChange}\r\n      placeholder={\"סנן לפי מספר פרויקט\"}\r\n    />\r\n    <input\r\n      type='date'\r\n      value={filterInput.first_reporting_date}\r\n      onChange={handleFirstDateFilterChange}\r\n      placeholder={\"סננן מתאיך\"}\r\n    />\r\n    <input\r\n      type='date'\r\n      value={filterInput.last_reporting_date}\r\n      onChange={handleLastDateFilterChange}\r\n      placeholder={\"עד תאריך\"}\r\n    />\r\n    <p>תלחץ על עמודה כדי למיין אותה</p>\r\n    <table class=\"table\" {...getTableProps()}>\r\n      <thead>\r\n        {headerGroups.map(headerGroup => (\r\n          <tr {...headerGroup.getHeaderGroupProps()}>\r\n            {headerGroup.headers.map(column => (\r\n              <th\r\n                  {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                  className={\r\n                    column.isSorted\r\n                      ? column.isSortedDesc\r\n                        ? \"sort-desc\"\r\n                        : \"sort-asc\"\r\n                      : \"\"\r\n                  }\r\n                >\r\n                  {column.render(\"Header\")}\r\n                </th>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </thead>\r\n      <tbody {...getTableBodyProps()}>\r\n        {dataf.clear(),\r\n        rows.map((row, i) => {\r\n          prepareRow(row);\r\n          return (\r\n            <tr {...row.getRowProps()}>\r\n              {\r\n              row.cells.map(cell => {\r\n                if (in_date_range(cell.row.values.reporting_date)){\r\n                    dataf.add(cell.row.values)\r\n                    return <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>;\r\n                }\r\n\r\n              })}\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n    </table>\r\n    </div>\r\n  );\r\n}","C:\\Users\\hp\\Documents\\GitHub\\hashmalie\\src\\components\\Navbar.js",["199"],"import React, { useState, useEffect, Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { logout, get_user_data } from '../actions/auth';\r\n\r\n\r\nconst Navbar = ({ get_user_data,logout, isAuthenticated}) => {\r\n    const [data, setData] = useState({\r\n     first_name:\"\",\r\n     last_name:\"\"});\r\n\r\n//    useEffect(() => {\r\n//        get_user_data().then((dataRes) => {\r\n//            setData(dataRes);\r\n//        });\r\n//    }, []);\r\n\r\n    const get_user = async (data)=>{\r\n       const user_Res = await get_user_data()\r\n       if(user_Res.first_name !== undefined){\r\n        setData(user_Res);\r\n       }\r\n\r\n    }\r\n    useEffect(()=>{\r\n      get_user()\r\n    },[])\r\n\r\n\r\n    const guestLinks = () => (\r\n        <Fragment>\r\n            <li className='nav-item'>\r\n                <Link className='nav-link' to='/login'>לכניסה</Link>\r\n            </li>\r\n            <li className='nav-item'>\r\n                <Link className='nav-link' to='/signup'>להרשמה</Link>\r\n            </li>\r\n        </Fragment>\r\n    );\r\n\r\n    const authLinks = () => (\r\n\r\n    <Fragment>\r\n        <li className='nav-item'>\r\n            <a className='nav-link' href='#!' onClick={logout}>ליציאה</a>\r\n        </li>\r\n        <li className='nav-item'>\r\n                <Link className='nav-link' to='/homepage'>העסק שלי</Link>\r\n        </li>\r\n        {<li className='nav-item'>\r\n            <Link className='nav-link'>ברוך הבא {data.first_name+ \" \" + data.last_name}</Link>\r\n        </li>}\r\n\r\n\r\n    </Fragment>\r\n    );\r\n\r\n    return (\r\n\r\n            <nav className='navbar navbar-expand-lg navbar-light bg-light' lang=\"he\" dir=\"rtl\">\r\n                <Link className='navbar-brand' to='/'>החשמלאי</Link>\r\n                <button\r\n                    className='navbar-toggler'\r\n                    type='button'\r\n                    data-toggle='collapse'\r\n                    data-target='#navbarNav'\r\n                    aria-controls='navbarNav'\r\n                    aria-expanded='false'\r\n                    aria-label='Toggle navigation'\r\n                >\r\n                    <span className='navbar-toggler-icon'></span>\r\n                </button>\r\n                <div className='collapse navbar-collapse' id='navbarNav'>\r\n                    <ul className='navbar-nav'>\r\n                        <li className='nav-item active'>\r\n                            <Link className='nav-link' to='/'>עמוד הבית <span className='sr-only'>(current)</span></Link>\r\n                        </li>\r\n\r\n                        {isAuthenticated ? authLinks() : guestLinks()}\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n    });\r\n\r\nexport default connect(mapStateToProps, { logout, get_user_data })(Navbar);\r\n","C:\\Users\\hp\\Documents\\GitHub\\hashmalie\\src\\reducers\\index.js",[],"C:\\Users\\hp\\Documents\\GitHub\\hashmalie\\src\\actions\\types.js",[],"C:\\Users\\hp\\Documents\\GitHub\\hashmalie\\src\\reducers\\auth.js",["200"],"import {\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    USER_LOADED_SUCCESS,\r\n    USER_LOADED_FAIL,\r\n    AUTHENTICATED_SUCCESS,\r\n    AUTHENTICATED_FAIL,\r\n    PASSWORD_RESET_SUCCESS,\r\n    PASSWORD_RESET_FAIL,\r\n    PASSWORD_RESET_CONFIRM_SUCCESS,\r\n    PASSWORD_RESET_CONFIRM_FAIL,\r\n    SIGNUP_SUCCESS,\r\n    SIGNUP_FAIL,\r\n    ACTIVATION_SUCCESS,\r\n    ACTIVATION_FAIL,\r\n    LOGOUT\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    access: localStorage.getItem('access'),\r\n    refresh: localStorage.getItem('refresh'),\r\n    isAuthenticated: null,\r\n    user: null\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch(type) {\r\n        case AUTHENTICATED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true\r\n            }\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem('access', payload.access);\r\n            localStorage.setItem('refresh', payload.refresh);\r\n\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true\r\n                //access: payload.access,\r\n                //refresh: payload.refresh\r\n            }\r\n        case SIGNUP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false\r\n            }\r\n        case USER_LOADED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                user: payload\r\n            }\r\n        case AUTHENTICATED_FAIL:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false\r\n            }\r\n        case USER_LOADED_FAIL:\r\n            return {\r\n                ...state,\r\n                user: null\r\n            }\r\n        case LOGIN_FAIL:\r\n        case SIGNUP_FAIL:\r\n        case LOGOUT:\r\n            localStorage.removeItem('access');\r\n            localStorage.removeItem('refresh');\r\n            return {\r\n                ...state,\r\n                access: null,\r\n                refresh: null,\r\n                isAuthenticated: false,\r\n                user: null\r\n            }\r\n        case PASSWORD_RESET_SUCCESS:\r\n        case PASSWORD_RESET_FAIL:\r\n        case PASSWORD_RESET_CONFIRM_SUCCESS:\r\n        case PASSWORD_RESET_CONFIRM_FAIL:\r\n        case ACTIVATION_SUCCESS:\r\n        case ACTIVATION_FAIL:\r\n            return {\r\n                ...state\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n};","C:\\Users\\hp\\Documents\\GitHub\\hashmalie\\src\\components\\reportGenerator.js",[],"C:\\Users\\hp\\Documents\\GitHub\\hashmalie\\src\\components\\david-normal.js",["201","202"],"C:\\Users\\hp\\Documents\\GitHub\\hashmalie\\src\\components\\David-normal.js",["203"],"﻿import { jsPDF } from \"jspdf\";\nvar font = '';\nvar callAddFont = function () {\nconsole.log(\"here\");\nthis.addFileToVFS('David-normal.ttf', font);\nthis.addFont('David-normal.ttf', 'David', 'normal');\n};\njsPDF.API.events.push(['addFonts', callAddFont])\n\n//define([\n//\n//\"https://unpkg.com/jspdf@latest/dist/jspdf.umd.min.js\"\n//\n//], function (jsPDF) {\n//var theClass = {\n//addFont: function (doc) {\n//var font = '';\n//\n//var callAddFont = function () {\n//doc.addFileToVFS('David-normal.ttf', font);\n//doc.addFont('David-normal.ttf', 'David', 'normal');\n//};\n//jsPDF.jsPDF.API.events.push(['addFonts', callAddFont]);\n//}\n//\n//// eof public property functions\n//};\n//return theClass;\n//});\n","C:\\Users\\hp\\Documents\\GitHub\\hashmalie\\src\\containers\\FileRepository.js",["204"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst FileRepository = () => (\r\n    <html lang=\"he\" >\r\n        FileRepository\r\n    </html>\r\n);\r\nexport default FileRepository;\r\n",{"ruleId":"205","replacedBy":"206"},{"ruleId":"207","replacedBy":"208"},{"ruleId":"209","severity":1,"message":"210","line":1,"column":40,"nodeType":"211","messageId":"212","endLine":1,"endColumn":47},{"ruleId":"209","severity":1,"message":"213","line":19,"column":11,"nodeType":"211","messageId":"212","endLine":19,"endColumn":18},{"ruleId":"209","severity":1,"message":"214","line":1,"column":28,"nodeType":"211","messageId":"212","endLine":1,"endColumn":36},{"ruleId":"209","severity":1,"message":"214","line":1,"column":17,"nodeType":"211","messageId":"212","endLine":1,"endColumn":25},{"ruleId":"209","severity":1,"message":"215","line":2,"column":10,"nodeType":"211","messageId":"212","endLine":2,"endColumn":14},{"ruleId":"209","severity":1,"message":"216","line":1,"column":17,"nodeType":"211","messageId":"212","endLine":1,"endColumn":26},{"ruleId":"209","severity":1,"message":"217","line":1,"column":47,"nodeType":"211","messageId":"212","endLine":1,"endColumn":55},{"ruleId":"209","severity":1,"message":"218","line":2,"column":8,"nodeType":"211","messageId":"212","endLine":2,"endColumn":16},{"ruleId":"209","severity":1,"message":"215","line":6,"column":10,"nodeType":"211","messageId":"212","endLine":6,"endColumn":14},{"ruleId":"209","severity":1,"message":"219","line":6,"column":16,"nodeType":"211","messageId":"212","endLine":6,"endColumn":24},{"ruleId":"209","severity":1,"message":"220","line":21,"column":9,"nodeType":"211","messageId":"212","endLine":21,"endColumn":13},{"ruleId":"221","severity":1,"message":"222","line":43,"column":7,"nodeType":"223","endLine":43,"endColumn":9,"suggestions":"224"},{"ruleId":"221","severity":1,"message":"225","line":54,"column":7,"nodeType":"223","endLine":54,"endColumn":25,"suggestions":"226"},{"ruleId":"227","severity":1,"message":"228","line":63,"column":88,"nodeType":"229","messageId":"230","endLine":63,"endColumn":89},{"ruleId":"209","severity":1,"message":"215","line":2,"column":9,"nodeType":"211","messageId":"212","endLine":2,"endColumn":13},{"ruleId":"209","severity":1,"message":"231","line":6,"column":12,"nodeType":"211","messageId":"212","endLine":6,"endColumn":18},{"ruleId":"209","severity":1,"message":"232","line":6,"column":20,"nodeType":"211","messageId":"212","endLine":6,"endColumn":29},{"ruleId":"233","severity":1,"message":"234","line":71,"column":71,"nodeType":"235","messageId":"236","endLine":71,"endColumn":72},{"ruleId":"233","severity":1,"message":"234","line":71,"column":79,"nodeType":"235","messageId":"236","endLine":71,"endColumn":80},{"ruleId":"233","severity":1,"message":"234","line":72,"column":44,"nodeType":"235","messageId":"236","endLine":72,"endColumn":45},{"ruleId":"233","severity":1,"message":"234","line":72,"column":58,"nodeType":"235","messageId":"236","endLine":72,"endColumn":59},{"ruleId":"233","severity":1,"message":"234","line":88,"column":52,"nodeType":"235","messageId":"236","endLine":88,"endColumn":53},{"ruleId":"233","severity":1,"message":"234","line":88,"column":60,"nodeType":"235","messageId":"236","endLine":88,"endColumn":61},{"ruleId":"233","severity":1,"message":"234","line":93,"column":68,"nodeType":"235","messageId":"236","endLine":93,"endColumn":69},{"ruleId":"233","severity":1,"message":"234","line":93,"column":77,"nodeType":"235","messageId":"236","endLine":93,"endColumn":78},{"ruleId":"237","severity":1,"message":"238","line":127,"column":21,"nodeType":"239","endLine":127,"endColumn":25},{"ruleId":"237","severity":1,"message":"238","line":138,"column":21,"nodeType":"239","endLine":138,"endColumn":25},{"ruleId":"221","severity":1,"message":"240","line":10,"column":8,"nodeType":"223","endLine":10,"endColumn":10,"suggestions":"241"},{"ruleId":"209","severity":1,"message":"216","line":1,"column":17,"nodeType":"211","messageId":"212","endLine":1,"endColumn":26},{"ruleId":"209","severity":1,"message":"217","line":1,"column":39,"nodeType":"211","messageId":"212","endLine":1,"endColumn":47},{"ruleId":"209","severity":1,"message":"218","line":2,"column":8,"nodeType":"211","messageId":"212","endLine":2,"endColumn":16},{"ruleId":"209","severity":1,"message":"242","line":6,"column":16,"nodeType":"211","messageId":"212","endLine":6,"endColumn":26},{"ruleId":"209","severity":1,"message":"219","line":6,"column":28,"nodeType":"211","messageId":"212","endLine":6,"endColumn":36},{"ruleId":"209","severity":1,"message":"243","line":8,"column":8,"nodeType":"211","messageId":"212","endLine":8,"endColumn":25},{"ruleId":"209","severity":1,"message":"244","line":14,"column":12,"nodeType":"211","messageId":"212","endLine":14,"endColumn":16},{"ruleId":"209","severity":1,"message":"245","line":16,"column":12,"nodeType":"211","messageId":"212","endLine":16,"endColumn":19},{"ruleId":"209","severity":1,"message":"246","line":16,"column":21,"nodeType":"211","messageId":"212","endLine":16,"endColumn":31},{"ruleId":"221","severity":1,"message":"247","line":52,"column":8,"nodeType":"223","endLine":52,"endColumn":10,"suggestions":"248"},{"ruleId":"209","severity":1,"message":"215","line":2,"column":10,"nodeType":"211","messageId":"212","endLine":2,"endColumn":14},{"ruleId":"209","severity":1,"message":"216","line":1,"column":17,"nodeType":"211","messageId":"212","endLine":1,"endColumn":26},{"ruleId":"209","severity":1,"message":"217","line":1,"column":39,"nodeType":"211","messageId":"212","endLine":1,"endColumn":47},{"ruleId":"209","severity":1,"message":"218","line":2,"column":8,"nodeType":"211","messageId":"212","endLine":2,"endColumn":16},{"ruleId":"209","severity":1,"message":"219","line":6,"column":16,"nodeType":"211","messageId":"212","endLine":6,"endColumn":24},{"ruleId":"221","severity":1,"message":"247","line":33,"column":8,"nodeType":"223","endLine":33,"endColumn":10,"suggestions":"249"},{"ruleId":"250","severity":1,"message":"251","line":265,"column":17,"nodeType":"239","endLine":265,"endColumn":87},{"ruleId":"209","severity":1,"message":"216","line":1,"column":17,"nodeType":"211","messageId":"212","endLine":1,"endColumn":26},{"ruleId":"209","severity":1,"message":"217","line":1,"column":39,"nodeType":"211","messageId":"212","endLine":1,"endColumn":47},{"ruleId":"209","severity":1,"message":"218","line":2,"column":8,"nodeType":"211","messageId":"212","endLine":2,"endColumn":16},{"ruleId":"209","severity":1,"message":"219","line":6,"column":16,"nodeType":"211","messageId":"212","endLine":6,"endColumn":24},{"ruleId":"209","severity":1,"message":"245","line":13,"column":12,"nodeType":"211","messageId":"212","endLine":13,"endColumn":19},{"ruleId":"209","severity":1,"message":"246","line":13,"column":21,"nodeType":"211","messageId":"212","endLine":13,"endColumn":31},{"ruleId":"221","severity":1,"message":"247","line":47,"column":8,"nodeType":"223","endLine":47,"endColumn":10,"suggestions":"252"},{"ruleId":"250","severity":1,"message":"251","line":69,"column":17,"nodeType":"239","endLine":69,"endColumn":81},{"ruleId":"250","severity":1,"message":"251","line":101,"column":17,"nodeType":"239","endLine":101,"endColumn":91},{"ruleId":"250","severity":1,"message":"251","line":121,"column":17,"nodeType":"239","endLine":121,"endColumn":87},{"ruleId":"250","severity":1,"message":"251","line":137,"column":17,"nodeType":"239","endLine":137,"endColumn":88},{"ruleId":"209","severity":1,"message":"253","line":5,"column":10,"nodeType":"211","messageId":"212","endLine":5,"endColumn":18},{"ruleId":"209","severity":1,"message":"254","line":5,"column":20,"nodeType":"211","messageId":"212","endLine":5,"endColumn":35},{"ruleId":"209","severity":1,"message":"255","line":52,"column":11,"nodeType":"211","messageId":"212","endLine":52,"endColumn":23},{"ruleId":"227","severity":1,"message":"228","line":124,"column":23,"nodeType":"229","messageId":"230","endLine":124,"endColumn":24},{"ruleId":"256","severity":1,"message":"257","line":130,"column":34,"nodeType":"258","messageId":"259","endLine":130,"endColumn":36},{"ruleId":"221","severity":1,"message":"222","line":27,"column":7,"nodeType":"223","endLine":27,"endColumn":9,"suggestions":"260"},{"ruleId":"261","severity":1,"message":"262","line":26,"column":1,"nodeType":"263","endLine":89,"endColumn":2},{"ruleId":"264","severity":2,"message":"265","line":1,"column":1,"nodeType":"266","endLine":21,"endColumn":3},{"ruleId":"267","severity":2,"message":"268","line":1,"column":1,"nodeType":"211","messageId":"269","endLine":1,"endColumn":7},{"ruleId":"270","severity":1,"message":"271","line":1,"column":1,"nodeType":"272","messageId":"273","fix":"274"},{"ruleId":"209","severity":1,"message":"215","line":2,"column":10,"nodeType":"211","messageId":"212","endLine":2,"endColumn":14},"no-native-reassign",["275"],"no-negated-in-lhs",["276"],"no-unused-vars","'compose' is defined but never used.","Identifier","unusedVar","'options' is assigned a value but never used.","'Fragment' is defined but never used.","'Link' is defined but never used.","'Component' is defined but never used.","'setState' is defined but never used.","'ReactDOM' is defined but never used.","'Redirect' is defined but never used.","'data' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'get_user'. Either include it or remove the dependency array.","ArrayExpression",["277"],"React Hook useEffect has a missing dependency: 'fix_data'. Either include it or remove the dependency array.",["278"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'newMap' is assigned a value but never used.","'setNewMap' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'checkAuthenticated' and 'load_user'. Either include them or remove the dependency array. If 'checkAuthenticated' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["279"],"'useHistory' is defined but never used.","'MyBusinessDetails' is defined but never used.","'cars' is assigned a value but never used.","'newUser' is assigned a value but never used.","'setNewUser' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'get_user_data'. Either include it or remove the dependency array. If 'get_user_data' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["280"],["281"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["282"],"'Calendar' is defined but never used.","'DateRangePicker' is defined but never used.","'handleSelect' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["283"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","import/no-amd","Expected imports instead of AMD define().","CallExpression","no-undef","'define' is not defined.","undef","unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program","unexpected",{"range":"284","text":"285"},"no-global-assign","no-unsafe-negation",{"desc":"286","fix":"287"},{"desc":"288","fix":"289"},{"desc":"290","fix":"291"},{"desc":"292","fix":"293"},{"desc":"292","fix":"294"},{"desc":"292","fix":"295"},{"desc":"286","fix":"296"},[-1,0],"","Update the dependencies array to be: [get_user]",{"range":"297","text":"298"},"Update the dependencies array to be: [fix_data, reports, workers]",{"range":"299","text":"300"},"Update the dependencies array to be: [checkAuthenticated, load_user]",{"range":"301","text":"302"},"Update the dependencies array to be: [get_user_data]",{"range":"303","text":"304"},{"range":"305","text":"304"},{"range":"306","text":"304"},{"range":"307","text":"298"},[1657,1659],"[get_user]",[1843,1861],"[fix_data, reports, workers]",[345,347],"[checkAuthenticated, load_user]",[1581,1583],"[get_user_data]",[1215,1217],[1469,1471],[717,719]]